---
- include_vars:
    file: "defaults/{{ kernel_type }}.yml"

# Packages listed from here will be installed:
# https://fedoraproject.org/wiki/Building_a_custom_kernel
- name: Installing prerequisites for buiding the kernel RPM on Fedora
  package:
    name: "{{ item }}"
    state: "present"
  with_flattened:
    - "{{ build_package_dependencies }}"
  become: true
  tags:
    - become

- name: Creating the rpmbuild directories
  file:
    dest: "{{ rpmbuild_sources_dir }}"
    state: directory

- name: Download the Fedora kernel repository
  git:
    repo: "{{ git_repository_kernel }}"
    dest: "{{ rpmbuild_sources_dir }}"
    version: "{{ git_branch_kernel }}"
    force: yes

- name: Copying over the custom kernel.spec
  template:
    src: "kernel_{{ kernel_type }}-{{ kernel_version_major }}.{{ kernel_version_minor }}.spec.j2"
    dest: "{{ rpmbuild_sources_dir }}/kernel.spec"
    backup: true
    force: true

- name: Installing build dependencies for the Linux kernel
  shell: "dnf -y builddep {{ rpmbuild_sources_dir }}/kernel.spec"
  become: true
  tags:
    - become

- name: Verifing if the Linux kernel source code has already been downloaded
  stat:
    path: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}.tar.xz"
  register: kernel_source_file

- name: "Downloading the Linux kernel {{ kernel_version_major }}.{{ kernel_version_minor }} source code"
  get_url:
    url: "https://cdn.kernel.org/pub/linux/kernel/v{{ kernel_version_major }}.x/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}.tar.xz"
    dest: "{{ rpmbuild_sources_dir }}"
  when: not kernel_source_file.stat.exists

- name: Verifing if the minor Linux kernel source code patches have already been downloaded
  stat:
    path: "{{ rpmbuild_sources_dir }}/patch-{{ kernel_version_major }}.{{ kernel_version_minor }}.{{ kernel_version_patch }}.xz"
  register: patches_source_file

- name: "Downloading the Linux kernel {{ kernel_version_major }}.{{ kernel_version_minor }}.{{ kernel_version_patch }} patches"
  get_url:
    url: "https://cdn.kernel.org/pub/linux/kernel/v{{ kernel_version_major }}.x/patch-{{ kernel_version_major }}.{{ kernel_version_minor }}.{{ kernel_version_patch }}.xz"
    dest: "{{ rpmbuild_sources_dir }}"
  when: not patches_source_file.stat.exists

- name: Making a directory to extract the Linux kernel source code into
  file:
    dest: "{{ rpmbuild_sources_dir }}/kernel"
    state: directory

- name: Verifing if the Linux kernel source has already been extracted
  stat:
    path: "{{ rpmbuild_sources_dir }}/patch-{{ kernel_version_major }}.{{ kernel_version_minor }}"
  register: kernel_source_directory

- name: Extracting the Linux kernel source code
  unarchive:
    src: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}.tar.xz"
    dest: "{{ rpmbuild_sources_dir }}"
    remote_src: true
  when: kernel_source_directory.stat.isdir is defined and kernel_source_directory.stat.isdir

# This is required to be pre-built for the RPM per: https://fedoraproject.org/wiki/Kernel/Rawhide
- name: Building the perf-man documentation
  shell: make man
  args:
    chdir: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}/tools/perf/Documentation/"

- name: Building the kvm_stat documentation
  shell: make man
  args:
    chdir: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}/tools/kvm/kvm_stat/"

# This is not mentioned in the Rawhide documentation from above.
# It is required as defined in the "scripts/generate-perf-man.sh"
# script from the Fedora "kernel" project
- name: Copying over the kvm_stat man page
  copy:
    src: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}/tools/kvm/kvm_stat/kvm_stat.1"
    dest: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}/tools/perf/Documentation/"
    remote_src: true

- name: Creating an archive of the perf-man pages
  shell: "tar -czvf {{ rpmbuild_sources_dir }}/perf-man-{{ kernel_version_major }}.{{ kernel_version_minor }}.tar.gz *.1"
  args:
    chdir: "{{ rpmbuild_sources_dir }}/linux-{{ kernel_version_major }}.{{ kernel_version_minor }}/tools/perf/Documentation/"

- name: Copying over the ACS override patch
  copy:
    src: "acs_override_{{ kernel_type }}.patch"
    dest: "{{ rpmbuild_sources_dir }}"
    force: True
  # This is only supported for the LTS kernel currently.
  when: kernel_type == "lts"

- block:
  - name: Verifying if the kernel 4.14 configuraiton file already exists
    stat:
      path: "{{ rpmbuild_sources_dir }}/kernel-x86_64.config"
    register: kernel_lts_config

  - name: Copying over the kernel-x86_64.config file
    copy:
      src: kernel-x86_64_lts_4.14.config
      dest: "{{ rpmbuild_sources_dir }}/kernel-x86_64.config"
    when: not kernel_lts_config.stat.exists

  - name: Adding new configuration options for the kernel 4.14
    lineinfile:
      path: "{{ rpmbuild_sources_dir }}/kernel-x86_64.config"
      line: "CONFIG_INFINIBAND_ADDR_TRANS=y"
  when: (kernel_version_major == 4) and
        (kernel_version_minor == 14) and
        (kernel_lts_config.stat.exists)

- name: Building the Linux kernel RPM
  shell: "rpmbuild -bb --with baseonly --without debuginfo {{ rpmbuild_sources_dir }}/kernel.spec"
  register: rpmbuild_output

- debug:
    msg: "The total build time was: {{ rpmbuild_output['delta'] }}"
